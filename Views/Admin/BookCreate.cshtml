@{
    Layout = "~/Views/Shared/_AdminLayout1.cshtml";
}

<div class="amain"></div>
<div class="admin-main">
    @model library.Models.BookModel

    @using (Html.BeginForm("BookCreate", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Create New Book Details</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div>
                @if (ViewBag.Message != null)
                {
                    <div class="alert alert-info">@ViewBag.Message</div>
                }
            </div>
            @*<div class="form-group">
                    @Html.LabelFor(model => model.BookId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.BookId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BookId, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.BookTitle, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BookTitle, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BookTitle, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NumberOfBooks, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NumberOfBooks, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NumberOfBooks, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ISBN)
                @Html.TextBoxFor(model => model.ISBN, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ISBN)
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PublishYear)
                @Html.TextBoxFor(model => model.PublishYear, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PublishYear)
            </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.BookImage, "Book Image")
                <input type="file" name="bookImage" id="BookImageUpload" />
                @if (Model != null && Model.BookImage != null && Model.BookImage.Length > 0)
                {
                    // Convert the byte array to Base64 string
                    string base64Image = Convert.ToBase64String(Model.BookImage);


                    <img src="data:image/png;base64,@base64Image" alt="Book Image" class="img-thumbnail" style="width:100px; height:auto;" />
                    <p>Image Size: @Model.BookImage.Length bytes</p>
                }*@

            @*else
                {
                    <img src="~/images/no-image.png" alt="No Image" class="img-thumbnail" style="width:100px; height:auto;" />
                }*@
            @*@Html.ValidationMessageFor(model => model.BookImage)
                </div>*@

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-primary" />
                    <a href="@Url.Action("AdminHome", "Admin")" class="btn btn-secondary">Cancel</a>
                </div>
            </div>
        </div>
    }

    @*<div>
            @Html.ActionLink("Back to List", "Bookmanagement")
        </div>*@
</div>
